akka {
  loglevel = DEBUG
  log-config-on-start = off

  actor {
    provider = "cluster"

    serialization-bindings {
      "oti.twin.CborSerializable" = jackson-cbor
    }
  }

# cluster {
#   seed-nodes = [
#     "akka://OTI-Twin@127.0.0.1:25520"]
# }

  cluster {
    sharding {
      number-of-shards = 1024
    }
  }

  management {
    cluster.bootstrap {
      contact-point-discovery {
#       service-name = "local-cluster"
#       discovery-method = config
        discovery-method = kubernetes-api

        # For the kubernetes API this value is substituted into the %s in pod-label-selector
        service-name = "oti-twin"

        required-contact-point-nr = 2
        required-contact-point-nr = ${?REQUIRED_CONTACT_POINT_NR}
      }
    }
  }

  persistence {
    max-concurrent-recoveries = 1000

    journal-plugin-fallback {
      recovery-event-timeout = 120s
    }
    journal {
      plugin = "akka.persistence.cassandra.journal"
    }
    cassandra {
      journal {
        keyspace = "oti_twin"
      }
    }
  }

  projection.cassandra {
    offset-store {
      keyspace = "oti_twin"
    }
  }
}

oti {
  simulator.http.server {
    host = "localhost"
    host = ${?oti_simulator_http_server_host}
    port = 8081
    port = ${?oti_simulator_http_server_port}
  }
  twin {
    projection-shards-per-zoom = 2
    http.server {
      host = "localhost"
      host = ${?oti_twin_http_server_host}
      port = 8082
      port = ${?oti_twin_http_server_port}
    }
    sql {
      url = "jdbc:postgresql://127.0.0.1:5433/"
      url = ${?postgresql_url}
      username = "yugabyte"
      username = ${?postgresql_username}
      password = "yugabyte"
      password = ${?postgresql_password}
    }
  }
}

datastax-java-driver {
  # basic.contact-points = [ "127.0.0.1:9042", "127.0.0.2:9042" ]
  basic.contact-points = [ ${?cassandra_host_port_1}, ${?cassandra_host_port_2} ]
  basic.load-balancing-policy {
    local-datacenter = datacenter1
  }
}

